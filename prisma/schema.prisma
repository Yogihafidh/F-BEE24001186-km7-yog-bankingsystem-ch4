// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  name         String
  email        String        @unique
  password     String
  bankAccounts BankAccount[] // One-to-Many dengan BankAccount
  profile      Profile?      // One-to-One dengan Profile, tidak perlu `@relation(fields: [profileId])`
}

model BankAccount {
  id                    Int           @id @default(autoincrement())
  userId                Int
  bankName              String
  bankAccountNumber     String        @unique
  balance               Float
  user                  User          @relation(fields: [userId], references: [id])
  transactionsSource    Transaction[] @relation("sourceAccount")
  transactionsDestination Transaction[] @relation("destinationAccount")
}

model Transaction {
  id                   Int          @id @default(autoincrement())
  sourceAccountId      Int
  destinationAccountId Int
  amount               Float
  sourceAccount        BankAccount @relation("sourceAccount", fields: [sourceAccountId], references: [id])
  destinationAccount   BankAccount @relation("destinationAccount", fields: [destinationAccountId], references: [id])
}

model Profile {
  id             Int     @id @default(autoincrement())
  userId         Int     @unique
  identityType   String
  identityNumber String
  address        String
  user           User    @relation(fields: [userId], references: [id]) // Foreign key di sini
}
